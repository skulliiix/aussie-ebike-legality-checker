
import React, { useState, useCallback } from 'react';
import { searchEbikes, getBikeAnalysisById } from './services/searchService';
import type { EbikeAnalysisResult, MultipleMatchResult, BikeOption } from './types';
import LoadingSpinner from './components/LoadingSpinner';
import StateLegalityCard from './components/StateLegalityCard';

const BoltIcon: React.FC<{ className?: string }> = ({ className }) => (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className={className}>
        <path strokeLinecap="round" strokeLinejoin="round" d="m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z" />
    </svg>
);


const App: React.FC = () => {
  const [ebikeInput, setEbikeInput] = useState<string>('');
  const [analysisResult, setAnalysisResult] = useState<EbikeAnalysisResult | null>(null);
  const [multipleMatches, setMultipleMatches] = useState<MultipleMatchResult | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  const [geminiEnabled, setGeminiEnabled] = useState<boolean>(true);
  const [isUnlocked, setIsUnlocked] = useState<boolean>(false);


  const handleSearch = useCallback(async (event: React.FormEvent) => {
